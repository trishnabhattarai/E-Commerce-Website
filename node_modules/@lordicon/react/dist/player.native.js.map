{"version":3,"file":"player.native.js","sources":["../src/player.native.tsx"],"sourcesContent":["import { isNil } from '@lordicon/helpers';\nimport LottieView from 'lottie-react-native';\nimport React from 'react';\nimport { Animated, Easing, View } from 'react-native';\nimport { AnimationDirection, IPlayer, IPlayerOptions, IState } from './interfaces';\n\nconst AnimatedLottieView = Animated.createAnimatedComponent(LottieView);\n\ntype PlayerState = {\n    progress?: Animated.Value;\n}\n\ninterface IAnimation {\n    animation: Animated.CompositeAnimation;\n    from: number;\n    to: number;\n    direction: AnimationDirection;\n}\n\ntype Options = IPlayerOptions & View['props'];\n\nexport class Player extends React.Component<Options, PlayerState> implements IPlayer {\n    protected _states: IState[] = [];\n    protected _state?: IState;\n    protected _playing: boolean = false;\n    protected _animation?: IAnimation;\n    protected _progress: number = 0;\n    \n    constructor(props: Options) {\n        super(props);\n        \n        this.state = { \n            progress: new Animated.Value(1),\n        };\n\n        this.state.progress!.addListener(({ value }) => {\n            this._progress = value;\n        });\n    }\n\n    connect() {\n        if (!this.props.icon) {\n            return;\n        }\n\n        this._states = (this.props.icon.markers || []).map((c: any) => {\n            const [partA, partB] = c.cm.split(':');\n            const newState: IState = {\n                time: c.tm,\n                duration: c.dr,\n                name: partB || partA,\n                default: partB && partA.includes('default') ? true : false,\n            };\n\n            if (newState.name === this.props.state) {\n                this._state = newState;\n            } else if (newState.default && isNil(this.props.state)) {\n                this._state = newState;\n            }\n\n            return newState;\n        });\n\n        if (this._states.length) {\n            const firstState = this._states[0];\n            const lastState = this._states[this._states.length - 1];\n\n            // fix animation time\n            this.props.icon.ip = firstState.time;\n            this.props.icon.op = lastState.time + lastState.duration + 1;\n        }\n        \n        this.goToFirstFrame();\n\n        this.onReady();\n    }\n\n    disconnect() {\n        if (this._animation) {\n            this._animation.animation.stop();\n            this._animation = undefined;\n        }\n    }\n\n    componentDidMount() {\n        this.connect();\n    }\n\n    componentWillUnmount() {\n        this.disconnect();\n    }\n\n    componentDidUpdate(prevProps: Options, prevState: PlayerState) {\n        if (prevProps.state !== this.props.state) {\n            this.onStateChanged();\n        }\n\n        if (prevProps.direction !== this.props.direction) {\n            this.onDirectionChanged();\n        }\n\n        if (prevProps.icon !== this.props.icon) {\n            this.onIconChanged();\n        }\n    }\n\n    frameToProgress(frame: number) {\n        return frame / this._totalFrames;\n    }\n\n    progressToFrame(progress: number) {\n        return progress * this._totalFrames;\n    }\n\n    duration(frames: number) {\n        return frames * this._fr;\n    }\n\n    onFinish(isCancelled: boolean) {\n        this._playing = false;\n\n        if (this._animation && !isCancelled) {\n            this._animation = undefined;\n        }\n\n        if (!isCancelled) {\n            this.props.onComplete?.();\n        }\n    }\n\n    onDirectionChanged() {\n        if (!this._animation) {\n            return;\n        }\n\n        const isPlaying = this._playing;\n\n        this._animation.animation.stop();\n        const animation = Animated.timing(this.state.progress!, {\n            toValue: this.frameToProgress(this._animation.from),\n            duration: this.duration(Math.abs(this.progressToFrame(this._progress) - this._animation.from)),\n            useNativeDriver: false,\n            easing: Easing.linear,\n        });\n\n        this._animation = {\n            animation,\n            from: this._animation.to,\n            to: this._animation.from,\n            direction: this.props.direction || 1,\n        };\n\n        if (isPlaying) {\n            this._playing = true;\n\n            animation.start(({ finished }: { finished: boolean }) => {\n                this.onFinish(!finished);\n            });\n        }\n    }\n\n    onStateChanged() {\n        const isPlaying = this.isPlaying;\n\n        this._state = undefined;\n\n        if (isNil(this.props.state)) {\n            this._state = this._states.filter(c => c.default)[0];\n        } else if (this.props.state) {\n            this._state = this._states.filter(c => c.name === this.props.state)[0];\n        }\n\n        this.playFromBeginning();\n        this.pause();\n\n\n        if (isPlaying) {\n            this.play();\n        }\n    }\n    \n    onIconChanged() {\n        this.disconnect();\n        this.connect();\n    }\n\n    onReady() {\n        this.props.onReady?.();\n    }\n\n    play() {\n        if (this._animation) {\n            this._playing = true;\n\n            this._animation.animation.start(({ finished }: { finished: boolean }) => {\n                this.onFinish(!finished);\n            });\n        } else {\n            this._playing = true;\n\n            const a: number = this._state ? this._state!.time : 0;\n            const b: number = this._state ? (this._state!.time + this._state!.duration) : this._totalFrames;\n            const c: number[] = this.props.direction === -1 ? [b, a] : [a, b];\n            const duration = this.duration(Math.abs(b - a));\n\n            if (this.progressToFrame(this._progress).toFixed(4) === c[1].toFixed(4)) {\n                this.onFinish(false);\n                return;\n            }\n            \n            this.state.progress?.setValue(this.frameToProgress(c[0]));\n    \n            const animation = Animated.timing(this.state.progress!, {\n                toValue: this.frameToProgress(c[1]),\n                duration,\n                useNativeDriver: false,\n                easing: Easing.linear,\n            });\n    \n            animation.start(({ finished }: { finished: boolean }) => {\n                this.onFinish(!finished);\n            });\n    \n            this._animation = {\n                animation,\n                from: c[0],\n                to: c[1],\n                direction: this.props.direction || 1,\n            };\n        }\n    }\n\n    playFromBeginning() {\n        this._playing = true;\n\n        const a = this._state ? this._state!.time : 0;\n        const b = this._state ? (this._state!.time + this._state!.duration) : this._totalFrames;\n        const c = [a, b];\n        const duration = this.duration(Math.abs(b - a));\n        \n        this.state.progress?.setValue(this.frameToProgress(c[0]));\n\n        const animation = Animated.timing(this.state.progress!, {\n            toValue: this.frameToProgress(c[1]),\n            duration,\n            useNativeDriver: false,\n            easing: Easing.linear,\n        });\n\n        animation.start(({ finished }: { finished: boolean }) => {\n            this.onFinish(!finished);\n        });\n\n        this._animation = {\n            animation,\n            from: c[0],\n            to: c[1],\n            direction: this.props.direction || 1,\n        };\n    }\n\n    pause() {\n        if (this._animation) {\n            this._animation.animation.stop();\n        }\n    }\n\n    goToFirstFrame() {\n        const p = this._state ? this._state!.time : 0;\n        this.state.progress?.setValue(this.frameToProgress(p));\n    }\n\n    goToLastFrame() {\n        const p = this._state ? (this._state.time + this._state.duration) : 0;\n        this.state.progress?.setValue(this.frameToProgress(p));\n    }\n\n    render() {\n        const size = this.props.size || 32;\n\n        return (\n            <View style={[{\n                width: size,\n                height: size,\n                aspectRatio: 1,\n                flexDirection: 'row',\n            }, this.props.style]}>\n                <AnimatedLottieView  \n                    style={[{flex: 1}]} \n                    autoPlay={false}\n                    loop={false}\n                    progress={this.state.progress}\n                    source={this.props.icon}\n                    renderMode={this.props.renderMode}\n                    cacheComposition={false}\n                    colorFilters={ this.props.colorize ? [{ keypath: '*', color: this.props.colorize } ] : undefined }\n                />\n            </View>\n        );\n    }    \n    \n    get frames() {\n        return this._state?.duration || this._totalFrames;\n    }\n\n    get isPlaying() {\n        return this._playing;\n    }\n\n    get states() {\n        return this._states;\n    }\n\n    get currentState() {\n        return this._state;\n    }\n\n    get _totalFrames() {\n        return this.props.icon.op - 1;\n    }\n\n    get _fr() {\n        return 1000 / this.props.icon.fr;\n    }\n}\n"],"names":["AnimatedLottieView","Animated","createAnimatedComponent","LottieView","Player","React","Component","_states","_state","_playing","_animation","_progress","constructor","props","super","this","state","progress","Value","addListener","value","connect","icon","markers","map","c","partA","partB","cm","split","newState","time","tm","duration","dr","name","default","includes","isNil","length","firstState","lastState","ip","op","goToFirstFrame","onReady","disconnect","animation","stop","undefined","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","prevState","onStateChanged","direction","onDirectionChanged","onIconChanged","frameToProgress","frame","_totalFrames","progressToFrame","frames","_fr","onFinish","isCancelled","onComplete","isPlaying","timing","toValue","from","Math","abs","useNativeDriver","easing","Easing","linear","to","start","finished","filter","playFromBeginning","pause","play","a","b","toFixed","setValue","p","goToLastFrame","render","size","_jsx","View","style","width","height","aspectRatio","flexDirection","flex","autoPlay","loop","source","renderMode","cacheComposition","colorFilters","colorize","keypath","color","states","currentState","fr"],"mappings":"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"}